-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Behaviour Expressions for TorXakis
--   
--   Behaviour Expressions for TorXakis
@package behave
@version 0.2.1.0

module StautDef
translate :: Map FuncId (FuncDef VarId) -> Id -> Id -> Name -> [ChanId] -> [VarId] -> ExitSort -> [StatId] -> [VarId] -> [Trans] -> StatId -> VEnv -> (ProcDef, BExpr)

-- | combine parameters of stautdef, state identifier, and stautdef
--   variables into single parameter list must be consistent with
--   <tt>combineArguments</tt>
combineParameters :: [VarId] -> VarId -> [VarId] -> [VarId]

module Subst

-- | Expressions that support substitution of variables for expressions.
class Subst e

-- | Substitution function.
subst :: Subst e => VEnv -> Map FuncId (FuncDef VarId) -> e -> e
subst' :: VEnv -> Map FuncId (FuncDef VarId) -> BExprView -> BExpr
instance (GHC.Classes.Ord e, Subst.Subst e) => Subst.Subst [e]
instance (GHC.Classes.Ord e, Subst.Subst e) => Subst.Subst (Data.Set.Internal.Set e)
instance Subst.Subst BehExprDefs.BExpr
instance Subst.Subst BehExprDefs.Offer
instance Subst.Subst BehExprDefs.ChanOffer
instance Subst.Subst VarEnv.VExpr

module Expand

-- | Expansion of CNode into communication tree, recursively over CNode
--   structure CNode must be closed and have no free, symbolic, or
--   interaction variables.
expand :: [Set ChanId] -> CNode -> IOB CTree
class Relabel e
relabel :: Relabel e => Map ChanId ChanId -> e -> e
instance Expand.Relabel BehExprDefs.BExpr
instance Expand.Relabel BehExprDefs.Offer
instance Expand.Relabel ChanId.ChanId
instance Expand.Relabel BehExprDefs.Trans

module Behave
behInit :: [Set ChanId] -> BExpr -> IOB (Maybe BTree)

-- | behMayMenu : may menu of BTree without quiescence
--   
--   Returns the list of all possible *visible* symbolic-actions.
behMayMenu :: [Set ChanId] -> BTree -> Menu
behMustMenu :: [Set ChanId] -> BTree -> Menu
behRefusal :: BTree -> Set ChanId -> Bool
behAfterAct :: [Set ChanId] -> BTree -> BehAction -> IOB (Maybe BTree)
behAfterRef :: BTree -> Set ChanId -> IOB (Maybe BTree)
