-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Send and receive text lines using sockets.
--   
--   Please see the README on Github at
--   <a>https://github.com/capitanbatata/text-via-sockets#readme</a>
@package text-via-sockets
@version 0.1.0.0


-- | Simple line-based text communication via sockets.
module Network.TextViaSockets

-- | A connection for sending and receiving <tt>Text</tt> lines.
data Connection

-- | Connect to the given host and service name (usually a port number).
--   
--   If the connection cannot be established, this action will be retried
--   using an exponential back-off strategy, until the maximum number of
--   tries is reached.
connectTo :: HostName -> ServiceName -> IO Connection

-- | Accept byte-streams by serving on the given port number. This function
--   will block until a client connects to the server.
--   
--   If the connection cannot be established, this action will be retried
--   using an exponential back-off strategy, until the maximum number of
--   tries is reached.
acceptOn :: PortNumber -> IO Connection

-- | Like <tt>acceptOn</tt> but it takes a bound socket as parameter.
acceptOnSocket :: Socket -> IO Connection

-- | Get a free socket from the operating system.
getFreeSocket :: IO Socket

-- | Read a text line from the given connection.
--   
--   This function might throw an <tt>BlockedIndefinitelyOnSTM</tt>
--   exception if the connection to the server is closed, so users of this
--   function should check for this.
getLineFrom :: Connection -> IO Text

-- | Receive <tt>n</tt> messages.
receiveMsgs :: Connection -> Int -> IO [Text]

-- | Put a text line onto the given connection.
putLineTo :: Connection -> Text -> IO ()

-- | Send a list of messages.
sendMsgs :: Connection -> [Text] -> IO ()

-- | Close the connection.
close :: Connection -> IO ()
instance GHC.Classes.Eq Network.TextViaSockets.Connection
instance GHC.Show.Show Network.TextViaSockets.Connection
