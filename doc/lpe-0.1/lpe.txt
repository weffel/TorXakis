-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | LPE for TorXakis
--   
--   LPE for TorXakis
@package lpe
@version 0.1


module LPE
type ProcDefs = Map ProcId ProcDef
preGNF :: (EnvB envb) => ProcId -> TranslatedProcDefs -> ProcDefs -> envb ProcDefs
gnf :: (EnvB envb) => ProcId -> TranslatedProcDefs -> ProcDefs -> envb ProcDefs

-- | wrapper around lpe function, returning only the relevant ProcDef
--   instead of all ProcDefs
lpeTransform :: (EnvB envb) => BExpr -> ProcDefs -> envb (Maybe (BExpr, ProcDef))
lpe :: (EnvB envb) => BExpr -> TranslatedProcDefs -> ProcDefs -> envb (BExpr, ProcDefs)
lpePar :: (EnvB envb) => BExpr -> TranslatedProcDefs -> ProcDefs -> envb (BExpr, ProcDefs)
lpeHide :: (EnvB envb) => BExpr -> TranslatedProcDefs -> ProcDefs -> envb (BExpr, ProcDefs)
preGNFEnable :: (EnvB envb) => BExpr -> TranslatedProcDefs -> ProcDefs -> envb (BExpr, ProcDefs)


module LPEfunc
lpeTransformFunc :: BExpr -> ProcDefs -> Maybe (BExpr, ProcDef)
lpeParFunc :: BExpr -> TranslatedProcDefs -> ProcDefs -> (BExpr, ProcDefs)
lpeHideFunc :: BExpr -> Map (Name, Int) VarId -> TranslatedProcDefs -> ProcDefs -> (BExpr, ProcDefs)
preGNFEnableFunc :: BExpr -> Map (Name, Int) VarId -> TranslatedProcDefs -> ProcDefs -> (BExpr, ProcDefs)
gnfFunc :: ProcId -> TranslatedProcDefs -> ProcDefs -> ProcDefs
preGNFFunc :: ProcId -> TranslatedProcDefs -> ProcDefs -> ProcDefs
eqProcDef :: Maybe (BExpr, ProcDef) -> Maybe (BExpr, ProcDef) -> Bool
eqProcDefs :: ProcDefs -> ProcDefs -> Bool
instance EnvBasic.EnvB LPEfunc.IOL
